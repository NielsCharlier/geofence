<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd">

	<!--
		====================================================================
	-->
	<!-- Property config files -->
	<!-- Any customization should go in the property file -->
	<!--
		====================================================================
	-->

	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<!-- property name="location" value="classpath:geofence-datasource.properties"/ -->
		<property name="locations" value="classpath*:geofence-datasource.properties"/>
		<property name="ignoreResourceNotFound" value="false" />
	</bean>

	<bean class="org.springframework.beans.factory.config.PropertyOverrideConfigurer">
		<property name="locations" value="classpath*:geofence-datasource-ovr.properties"/>
        <property name="ignoreResourceNotFound" value="true"/>
    </bean>

	<!--
		<bean
		class="org.springframework.beans.factory.config.PropertyOverrideConfigurer">
		<property name="location"
		value="file:${user.home}/geofence-datasource-ovr.properties"/>
		<property name="ignoreResourceNotFound" value="True"/> </bean>
	-->

	<!--
		<bean
		class="org.springframework.beans.factory.config.PropertyOverrideConfigurer">
		<property name="location" value="file:${geofence-datasource}"/>
		<property name="ignoreResourceNotFound" value="True"/> </bean>
	-->

	<!--
		====================================================================
	-->

	<bean id="geofenceDataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${geofenceDataSource.driver}" />
		<property name="url" value="${geofenceDataSource.url}" />
		<property name="username" value="${geofenceDataSource.username}" />
		<property name="password" value="${geofenceDataSource.password}" />
	</bean>

	<bean id="geofenceEntityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="geofence" />
		<property name="persistenceXmlLocation" value="classpath:META-INF/geofence-persistence.xml" />
		<property name="dataSource" ref="geofenceDataSource" />
		<property name="loadTimeWeaver">
			<bean
				class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
		</property>
		<property name="jpaVendorAdapter" ref="geofenceVendorAdapter" />
		<property name="jpaPropertyMap">
			<map>
				<entry key="hibernate.cache.provider_class" value="org.hibernate.cache.EhCacheProvider" />
				<entry key="hibernate.cache.provider_configuration_file_resource_path"
					value="classpath:geofence-ehcache.xml" />
				<entry key="hibernate.hbm2ddl.auto" value="validate"/> <!-- we provide an SQL script at runtime hence we do not do the creation -->
				<entry key="hibernate.cache.use_second_level_cache" value="true" />
				<entry key="hibernate.connection.autocommit" value="false" />
				<entry key="hibernate.generate_statistics" value="false" />
				<entry key="hibernate.default_schema" value="${geofenceDataSource.schema}" />
			</map>
		</property>
	</bean>

	<bean id="geofenceVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform" value="${geofenceVendorAdapter.databasePlatform}" />
		<property name="showSql" value="false" />
		<property name="generateDdl" value="false" />
	</bean>

	<bean id="geofenceTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="geofenceEntityManagerFactory" />
	</bean>

	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<tx:annotation-driven />

</beans>


