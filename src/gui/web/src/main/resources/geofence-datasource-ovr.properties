################################################################################
## hbm2ddl.auto may assume one of these values:
## - validate: validates the DB schema at startup against the internal model. May fail on oracle spatial.
## - update: updates the schema, according to the internal model. Updating automatically the production DB is dangerous.
## - create-drop: drop the existing schema and recreates it according to the internal model. REALLY DANGEROUS, YOU WILL LOSE YOUR DATA.
## You may want not to redefine the property entirely, in order to leave the defult value (no action).
geofenceEntityManagerFactory.jpaPropertyMap[hibernate.hbm2ddl.auto]=update


################################################################################
## Other setup entries
##
## ShowSQL is set to true in the configuration file; putting showsql=false in
## this file, you can easily check that this override file has been properly applied.

geofenceVendorAdapter.generateDdl=true
geofenceVendorAdapter.showSql=false

## Set to "true" for e-GEOS
workspaceConfigOpts.showDefaultGroups=false


################################################################################
## Override DB connection parameters
##
## You should use these overrides _only_ when you can't set the base property file, i.e.
## when you're placing this file in a custon location (not WEB-INF/classes)
##
#geofenceVendorAdapter.databasePlatform=org.hibernatespatial.postgis.PostgisDialect
#geofenceDataSource.driver=org.postgresql.Driver
#geofenceDataSource.url=jdbc:postgresql://localhost:5432/geofence
#geofenceDataSource.username=geofence
#geofenceDataSource.password=geofence
#geofenceEntityManagerFactory.jpaPropertyMap[hibernate.default_schema]=geofence


################################################################################
## Disable second level cache.
## This is needed in a clustered environment.
#
#georepoEntityManagerFactory.jpaPropertyMap[hibernate.cache.use_second_level_cache]=false